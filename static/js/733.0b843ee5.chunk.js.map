{"version":3,"file":"static/js/733.0b843ee5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/movie-details-page.module.css?2076","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"movie-details-page_wrapper__F9OaZ\",\"wrapper__info\":\"movie-details-page_wrapper__info__XIvyK\",\"link\":\"movie-details-page_link__Chm7G\",\"link__add\":\"movie-details-page_link__add__GWgrP\",\"title\":\"movie-details-page_title__lvyVs\",\"subtitle\":\"movie-details-page_subtitle__ShdPZ\",\"list\":\"movie-details-page_list__lJ6Dn\",\"img\":\"movie-details-page_img__nPy+G\",\"expandLink\":\"movie-details-page_expandLink__ntu9M\"};","import { Suspense, useState, useEffect } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Loader from 'components/Loader/Loader';\nimport { getMovieInfoById } from '../../shared/movies-api';\nimport css from './movie-details-page.module.css';\n\nconst MovieDetailsPage = () => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [expandedOverview, setExpandedOverview] = useState(false);\n  const [castVisible, setCastVisible] = useState(false);\n  const [reviewsVisible, setReviewsVisible] = useState(false);\n  const toggleOverview = () => {\n    setExpandedOverview(!expandedOverview);\n  };\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieInfoById(movieId)\n      .then(data => setMovieInfo(data))\n      .catch(() =>\n        Notify.warning('Oops! Something went wrong, please try again later.')\n      )\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {movieInfo && (\n        <>\n          <Link to={location.state?.from ?? '/'} className={css.link}>\n            Back\n          </Link>\n          <div className={css.wrapper}>\n            <img\n              className={css.img}\n              src={movieInfo.posterPath}\n              alt={movieInfo.title}\n              width=\"270\"\n              height=\"300\"\n            />\n            <div className={css.wrapper__info}>\n              <h1 className={css.title}>\n                {movieInfo.title} ({movieInfo.releaseYear})\n              </h1>\n              <p className={css.text}>User Score: {movieInfo.voteAverage}</p>\n              <h3 className={css.subtitle}>Overview</h3>\n              {movieInfo.overview.length > 300 ? (\n                <p className={css.text}>\n                  {expandedOverview\n                    ? movieInfo.overview\n                    : `${movieInfo.overview.substring(0, 300)}...`}\n                  <span className={css.expandLink} onClick={toggleOverview}>\n                    {expandedOverview ? 'See less' : 'See more'}\n                  </span>\n                </p>\n              ) : (\n                <p className={css.text}>{movieInfo.overview}</p>\n              )}\n              <h3 className={css.subtitle}>Genres</h3>\n              <p className={css.text}>{movieInfo.genres}</p>\n              <h3 className={css.subtitle}>Additional information</h3>\n              <ul className={css.list}>\n                <li className={css.item}>\n                  <Link\n                    to=\"cast\"\n                    className={css.link__add}\n                    state={{ from: location.state?.from ?? '/' }}\n                    onClick={() => setCastVisible(!castVisible)}\n                  >\n                    {castVisible ? 'Hide' : 'Cast'}\n                  </Link>\n                </li>\n                <li className={css.item}>\n                  <Link\n                    to=\"reviews\"\n                    className={css.link__add}\n                    state={{ from: location.state?.from ?? '/' }}\n                    onClick={() => setReviewsVisible(!reviewsVisible)}\n                  >\n                    {reviewsVisible ? 'Hide' : 'Reviews'}\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </>\n      )}\n      <Suspense fallback={<Loader />}>\n        {castVisible && <Outlet />}\n        {reviewsVisible && <Outlet />}\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '248116f5568d54feca6593c74cdd2b90',\n    language: 'en-US',\n    include_adult: false,\n    page: 1,\n  },\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n  const { data } = await instance.get(path);\n\n  const moviesList = data.results.map(({ id, title, poster_path }) => {\n    const movieTitle =\n      title.length > 25 ? `${title.substring(0, 22)}...` : title;\n    const src = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://via.placeholder.com/200x300.png?text=No+Image';\n\n    return { id, movieTitle, src };\n  });\n\n  return moviesList;\n};\n\nexport const getMovieByName = async query => {\n  const path = '/search/movie';\n  const { data } = await instance.get(path, {\n    params: { query: query },\n  });\n  const moviesList = data.results.map(({ id, name, title, poster_path }) => {\n    let movieTitle = title || name;\n    if (movieTitle.length > 25) {\n      movieTitle = movieTitle.substring(0, 22) + '...';\n    }\n    let src = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://via.placeholder.com/200x300.png?text=No+Image';\n    return { id, movieTitle, src };\n  });\n  return moviesList;\n};\n\nexport const getMovieInfoById = async movieId => {\n  const path = `/movie/${movieId}`;\n  const { data } = await instance.get(path);\n\n  const { genres, title, poster_path, release_date, vote_average, overview } =\n    data;\n\n  const posterPath = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://via.placeholder.com/200x300';\n\n  return {\n    id: movieId,\n    title,\n    posterPath,\n    releaseYear: release_date.substr(0, 4),\n    voteAverage: `${(vote_average * 10).toFixed(0)}%`,\n    overview,\n    genres: genres.length\n      ? genres.map(item => item.name).join(', ')\n      : 'Oops!! Unknown genres.',\n  };\n};\n\nexport const getMovieCast = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n  const { data } = await instance.get(path);\n  const cast = data.cast.map(({ name, character, id, profile_path }) => {\n    const src = profile_path\n      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n      : 'https://via.placeholder.com/200x300';\n    return {\n      name,\n      character,\n      id,\n      src,\n    };\n  });\n  return cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n  const { data } = await instance.get(path);\n  const reviews = data.results.map(({ author, id, content }) => ({\n    author,\n    id,\n    content,\n  }));\n\n  return reviews;\n};\n"],"names":["useState","movieInfo","setMovieInfo","loading","setLoading","expandedOverview","setExpandedOverview","castVisible","setCastVisible","reviewsVisible","setReviewsVisible","movieId","useParams","location","useLocation","useEffect","getMovieInfoById","then","data","catch","Notify","finally","Loader","to","state","from","className","css","src","posterPath","alt","title","width","height","releaseYear","voteAverage","overview","length","substring","onClick","genres","Suspense","fallback","instance","axios","baseURL","params","api_key","language","include_adult","page","headers","accept","getTrendingMovies","get","moviesList","results","map","id","poster_path","movieTitle","getMovieByName","query","name","path","release_date","vote_average","substr","toFixed","item","join","getMovieCast","cast","character","profile_path","getMovieReviews","reviews","author","content"],"sourceRoot":""}