{"version":3,"file":"static/js/990.1fe66285.chunk.js","mappings":"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","sources":["components/Cast/CastItem/CastItem.jsx","webpack://react-homework-template/./src/components/Cast/CastList/cast-list.module.css?dce4","components/Cast/CastList/CastList.jsx","pages/CastPage/CastPage.jsx","shared/movies-api.js","webpack://react-homework-template/./src/components/Cast/CastItem/cast-item.module.css?c791"],"sourcesContent":["import PropTypes from 'prop-types';\n\nimport css from './cast-item.module.css';\n\nconst CastItem = ({ data: { src, name, character } }) => {\n  return (\n    <li className={css.item}>\n      <img\n        src={`${src}`}\n        alt={`${name}`}\n        width=\"100\"\n        height=\"150\"\n        className={css.img}\n      />\n      <div className={css.wrapper}>\n        <p className={css.title}>{name}</p>\n        <p className={css.text}>{character}</p>\n      </div>\n    </li>\n  );\n};\n\nexport default CastItem;\n\nCastItem.propTypes = {\n  data: PropTypes.shape({\n    src: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast-list_list__2Z3s2\"};","import PropTypes from 'prop-types';\nimport CastItem from '../CastItem/CastItem';\n\nimport css from './cast-list.module.css';\n\nconst CastList = ({ data }) => {\n  return (\n    <ul className={css.list}>\n      {data.map(item => (\n        <CastItem key={item.id} data={item} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CastList;\n\nCastList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getMovieCast } from 'shared/movies-api';\nimport Loader from 'components/Loader/Loader';\nimport CastList from 'components/Cast/CastList/CastList';\nimport css from '../../components/Cast/CastItem/cast-item.module.css';\n\nconst CastPage = () => {\n  const [cast, setCast] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setLoading(true);\n    getMovieCast(movieId)\n      .then(data => setCast(data))\n      .catch(() =>\n        Notify.warning('Oops! Something went wrong, please try again later.')\n      )\n      .finally(() => setLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {cast?.length === 0 && (\n        <p className={css.title}>There is no information about this movie.</p>\n      )}\n      {cast && <CastList data={cast} />}\n    </>\n  );\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '248116f5568d54feca6593c74cdd2b90',\n    language: 'en-US',\n    include_adult: false,\n    page: 1,\n  },\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n  const { data } = await instance.get(path);\n\n  const moviesList = data.results.map(({ id, title, poster_path }) => {\n    const movieTitle =\n      title.length > 25 ? `${title.substring(0, 22)}...` : title;\n    const src = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://via.placeholder.com/200x300.png?text=No+Image';\n\n    return { id, movieTitle, src };\n  });\n\n  return moviesList;\n};\n\nexport const getMovieByName = async query => {\n  const path = '/search/movie';\n  const { data } = await instance.get(path, {\n    params: { query: query },\n  });\n  const moviesList = data.results.map(({ id, name, title, poster_path }) => {\n    let movieTitle = title || name;\n    if (movieTitle.length > 25) {\n      movieTitle = movieTitle.substring(0, 22) + '...';\n    }\n    let src = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://via.placeholder.com/200x300.png?text=No+Image';\n    return { id, movieTitle, src };\n  });\n  return moviesList;\n};\n\nexport const getMovieInfoById = async movieId => {\n  const path = `/movie/${movieId}`;\n  const { data } = await instance.get(path);\n\n  const { genres, title, poster_path, release_date, vote_average, overview } =\n    data;\n\n  const posterPath = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://via.placeholder.com/200x300';\n\n  return {\n    id: movieId,\n    title,\n    posterPath,\n    releaseYear: release_date.substr(0, 4),\n    voteAverage: `${(vote_average * 10).toFixed(0)}%`,\n    overview,\n    genres: genres.length\n      ? genres.map(item => item.name).join(', ')\n      : 'Oops!! Unknown genres.',\n  };\n};\n\nexport const getMovieCast = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n  const { data } = await instance.get(path);\n  const cast = data.cast.map(({ name, character, id, profile_path }) => {\n    const src = profile_path\n      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n      : 'https://via.placeholder.com/200x300';\n    return {\n      name,\n      character,\n      id,\n      src,\n    };\n  });\n  return cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n  const { data } = await instance.get(path);\n  const reviews = data.results.map(({ author, id, content }) => ({\n    author,\n    id,\n    content,\n  }));\n\n  return reviews;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"cast-item_item__+p6PR\",\"img\":\"cast-item_img__NkXlJ\",\"title\":\"cast-item_title__jenDd\",\"text\":\"cast-item_text__Fy+L7\"};"],"names":["data","src","name","character","className","css","alt","width","height","map","item","id","useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","getMovieCast","then","catch","Notify","finally","Loader","length","instance","axios","baseURL","params","api_key","language","include_adult","page","headers","accept","getTrendingMovies","get","moviesList","results","title","poster_path","movieTitle","substring","getMovieByName","query","getMovieInfoById","path","genres","release_date","vote_average","overview","posterPath","releaseYear","substr","voteAverage","toFixed","join","profile_path","getMovieReviews","reviews","author","content"],"sourceRoot":""}