{"version":3,"file":"static/js/418.938847b9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/movies-list.module.css?3466","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/HomePage/home-page.module.css?ebe0","pages/HomePage/HomePage.jsx","shared/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movies-list_list__QsEHr\",\"item\":\"movies-list_item__by-6a\",\"link\":\"movies-list_link__nBtgH\",\"img\":\"movies-list_img__AahWT\",\"subtitle\":\"movies-list_subtitle__hyAOE\"};","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport css from './movies-list.module.css';\n\nconst MoviesList = ({ data }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.list}>\n      {data.map(({ id, movieTitle, src }) => (\n        <li key={id} className={css.item}>\n          <Link\n            to={`/movies/${id}`}\n            state={{ from: location }}\n            className={css.link}\n          >\n            <img src={src} alt={movieTitle} className={css.img} />\n            <h3 className={css.subtitle}>{movieTitle}</h3>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      movieTitle: PropTypes.string.isRequired,\n      src: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"home-page_title__fc3KH\"};","import { useEffect, useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getTrendingMovies } from 'shared/movies-api';\nimport css from './home-page.module.css';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTrendingMovies()\n      .then(data => setMovies(data))\n      .catch(() =>\n        Notify.failure('Oops! Something went wrong, please try again later.')\n      )\n      .finally(() => setLoading(false));\n  }, []);\n  return (\n    <>\n      {loading && <Loader />}\n      {movies && (\n        <>\n          <h2 className={css.title}>Top Movies</h2>\n          <MoviesList data={movies} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '248116f5568d54feca6593c74cdd2b90',\n    language: 'en-US',\n    include_adult: false,\n    page: 1,\n  },\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n  const { data } = await instance.get(path);\n\n  const moviesList = data.results.map(({ id, title, poster_path }) => {\n    const movieTitle =\n      title.length > 25 ? `${title.substring(0, 22)}...` : title;\n    const src = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://via.placeholder.com/200x300.png?text=No+Image';\n\n    return { id, movieTitle, src };\n  });\n\n  return moviesList;\n};\n\nexport const getMovieByName = async query => {\n  const path = '/search/movie';\n  const { data } = await instance.get(path, {\n    params: { query: query },\n  });\n  const moviesList = data.results.map(({ id, name, title, poster_path }) => {\n    let movieTitle = title || name;\n    if (movieTitle.length > 25) {\n      movieTitle = movieTitle.substring(0, 22) + '...';\n    }\n    let src = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : 'https://via.placeholder.com/200x300.png?text=No+Image';\n    return { id, movieTitle, src };\n  });\n  return moviesList;\n};\n\nexport const getMovieInfoById = async movieId => {\n  const path = `/movie/${movieId}`;\n  const { data } = await instance.get(path);\n\n  const { genres, title, poster_path, release_date, vote_average, overview } =\n    data;\n\n  const posterPath = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : 'https://via.placeholder.com/200x300';\n\n  return {\n    id: movieId,\n    title,\n    posterPath,\n    releaseYear: release_date.substr(0, 4),\n    voteAverage: `${(vote_average * 10).toFixed(0)}%`,\n    overview,\n    genres: genres.length\n      ? genres.map(item => item.name).join(', ')\n      : 'Oops!! Unknown genres.',\n  };\n};\n\nexport const getMovieCast = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n  const { data } = await instance.get(path);\n  const cast = data.cast.map(({ name, character, id, profile_path }) => {\n    const src = profile_path\n      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n      : 'https://via.placeholder.com/200x300';\n    return {\n      name,\n      character,\n      id,\n      src,\n    };\n  });\n  return cast;\n};\n\nexport const getMovieReviews = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n  const { data } = await instance.get(path);\n  const reviews = data.results.map(({ author, id, content }) => ({\n    author,\n    id,\n    content,\n  }));\n\n  return reviews;\n};\n"],"names":["data","location","useLocation","className","css","map","id","movieTitle","src","to","state","from","alt","useState","movies","setMovies","loading","setLoading","useEffect","getTrendingMovies","then","catch","Notify","finally","Loader","MoviesList","instance","axios","baseURL","params","api_key","language","include_adult","page","headers","accept","get","moviesList","results","title","poster_path","length","substring","getMovieByName","query","name","getMovieInfoById","movieId","path","genres","release_date","vote_average","overview","posterPath","releaseYear","substr","voteAverage","toFixed","item","join","getMovieCast","cast","character","profile_path","getMovieReviews","reviews","author","content"],"sourceRoot":""}